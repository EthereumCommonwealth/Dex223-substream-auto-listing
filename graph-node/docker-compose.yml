services:
  graph-node:
    container_name: graph-node
    image: graphprotocol/graph-node:canary-substreams-index-module-e532c3135
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8020:8020"
      - "8030:8030"
      - "8040:8040"
    depends_on:
      - ipfs
      - postgres
    extra_hosts:
      - host.docker.internal:host-gateway
    environment:
      GRAPH_NODE_CONFIG: /etc/graph-node/config.toml
      GRAPH_STORE_WRITE_BATCH_SIZE: 0
      postgres_host: postgres
      postgres_user: ${POSTGRES_USER}
      postgres_pass: ${POSTGRES_PASSWORD}
      postgres_db: ${POSTGRES_DB}
      ipfs: 'ipfs:5001'
      GRAPH_LOG: error
      ETH_MAINNET_RPC: "${ETH_MAINNET_RPC}"
      SUBSTREAMS_ENDPOINT: "${SUBSTREAMS_ENDPOINT}"
      SUBSTREAMS_API_TOKEN: "${SUBSTREAMS_API_TOKEN}"
      RUST_BACKTRACE: full
      ETHEREUM_POLLING_INTERVAL: 10000
    volumes:
      - ./generated-config.toml:/etc/graph-node/config.toml
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "8000"]
      interval: 30s
      timeout: 10s
      retries: 15

  ipfs:
    container_name: ipfs-gn
    image: ipfs/kubo:v0.14.0
    ports:
      - "5001:5001"
      - "5002:8080"
    volumes:
      - ./data/ipfs:/data/ipfs
      - ./data/ipfs-export:/export
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "5001"]
      interval: 30s
      timeout: 10s
      retries: 15

  postgres:
    container_name: postgres-gn
    image: postgres:14
    ports:
      - "5432:5432"
    command: ["postgres", "-cshared_preload_libraries=pg_stat_statements"]
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=C"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
      interval: 30s
      timeout: 10s
      retries: 15

  pgweb:
    container_name: pgweb-gn
    image: sosedoff/pgweb:0.11.12
    restart: on-failure
    ports:
      - "8081:8081"
    command: ["pgweb", "--bind=0.0.0.0", "--listen=8081", "--binary-codec=hex"]
    links:
      - postgres:postgres
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable
    depends_on:
      - postgres
